package ir.bank.domain.person;


import lombok.Getter;
import lombok.Setter;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.format.annotation.NumberFormat;

import javax.persistence.*;
import java.io.Serializable;

@Getter

@Setter
@Entity
@Cacheable
@org.hibernate.annotations.Cache(usage = CacheConcurrencyStrategy.READ_ONLY)
@Table(name = "person", uniqueConstraints = { @UniqueConstraint(columnNames = "person_social_code"),
                                              @UniqueConstraint(columnNames = "person_mobile_number"),
                                              @UniqueConstraint(columnNames = "person_email_address")})
public class Person implements Serializable {


    @Id // this field value will be generated by hibernate sequence
    @GeneratedValue
    @Column(name = "id")
    private Long id;

    @Column(name = "person_first_name", columnDefinition = "nvarchar(100) default''")
    private String personFirstName;

    @Column(name = "person_last_name", columnDefinition = "nvarchar(150) default''")
    private String personLastName;

    @NumberFormat(style = NumberFormat.Style.NUMBER)
    @Column(name = "person_social_code")
    private String personSocialCode;

    @NumberFormat(style = NumberFormat.Style.NUMBER)
    @Column(name = "person_mobile_number")
    private String personMobileNumber;

    @Column(name = "person_address", columnDefinition = "nvarchar(250) default''")
    private String personAddress;

    @Column(name = "person_email_address")
    private String personEmailAddress;


    // setting person properties from person output class
    public PersonOutput toDto() {
        PersonOutput output = new PersonOutput();
        output.setPersonFirstName(personFirstName);
        output.setPersonLastName(personLastName);
        output.setPersonSocialCode(personSocialCode);
        output.setPersonMobileNumber(personMobileNumber);
        output.setPersonAddress(personAddress);
        output.setPersonEmailAddress(personEmailAddress);
        return output;
    }


    // setting person properties from person input class
    public Person fromDto(PersonInput input) {
        Person person = new Person();
        person.setPersonFirstName(input.getPersonFirstName());
        person.setPersonLastName(input.getPersonLastName());
        person.setPersonSocialCode(input.getPersonSocialCode());
        person.setPersonMobileNumber(input.getPersonMobileNumber());
        person.setPersonAddress(input.getPersonAddress());
        person.setPersonEmailAddress(input.getPersonEmailAddress());
        return person;

    }
}



